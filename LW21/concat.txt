tik{

    "a": 1,
    
    "inner_array": [2, 3, 4]
    
    }#!/bin/bash
max_size=4096

total_size=0

output_file="output.txt"

files=$(ls -Sr)

for file in $files; do

  if [[ -f $file ]]; then

    file_size=$(stat -c%s "$file")

    if (( total_size + file_size <= max_size )); then
   
      cat "$file" >> "$output_file"
      echo >> "$output_file"


      total_size=$((total_size + file_size))
    fi


    if (( total_size >= max_size )); then break; fi

  fi
done

echo "Общий размер файла, получившегося в результате: $total_size байт < 4096 байт"
Noodle Type;Country of Origin;Cooking Time
Ramen;Japan;5 minutes
Udon;Japan;10 minutes
Soba;Japan;5 minutes
Rice noodle;China;3 minutes
Egg noodle;China;4 minutes
Instant noodle;USA;8 minutes
Spaghetti;Italy;9 minutes
Fettuccine;Italy;12 minutes
Tagliatelle;Italy;10 minutes
Pho;Vietnam;6 minutes
Pad Thai;Thailand;7 minutes
Bucatini;Italy;9 minutes
Penne;Italy;10 minutes
Pappardelle;Italy;11 minutes
Linguine;Italy;8 minutes
Lasagne;Italy;30 minutes
Ditalini;Italy;10 minutes
Macaroni;USA;9 minutes
Orzo;Greece;10 minutes
Couscous;Morocco;5 minutes
Rigatoni;Italy;13 minutes
Farfalle;Italy;14 minutes
Fusilli;Italy;12 minutes
Cannelloni;Italy;40 minutes
Gnocchi;Italy;2 minutes
import os

# Получаем список файлов в текущей директории
files = [f for f in os.listdir() if os.path.isfile(f)]

# Сортируем файлы по размеру
files.sort(key=os.path.getsize)

# Максимальный размер итогового файла (размер блока)
max_size = 4096

# Общий размер всех файлов
total_size = 0

print(files)
# Открываем итоговый файл
with open('output.txt', 'w') as outfile:
    for filename in files:
    # Цикл по всем файлам
        file_size = os.path.getsize(filename)
        if total_size + file_size <= max_size:
            # Получаем размер файла
            
            with open(filename, 'r', encoding='cp1251') as infile:
                outfile.write(infile.read() + "\n")
            # Увеличиваем общий размер
            total_size += file_size
        else:
            
            break
print(f"Общий размер: {total_size} байт")
#!/bin/bash

# Установите размер блока вашей файловой системы в байтах
block_size=4096

# Создаем пустой файл для конкатенации
concat_file="concat.txt"
> $concat_file

# Получаем список всех файлов, отсортированных по размеру (возрастанию)
for file in $(ls -Sr)
do
    # Проверяем, что это не наш файл для конкатенации
    if [[ $file != $concat_file ]]
    then
        # Узнаем размер файла в байтах
        file_size=$(wc -c <"$file")

        # Узнаем текущий размер файла для конкатенации в байтах
        concat_file_size=$(wc -c <"$concat_file")

        # Если добавление файла не приведет к превышению размера блока,
        # добавляем его к конечному файлу
        if (( $file_size + $concat_file_size <= $block_size ))
        then
            cat $file >> $concat_file
        else
            break
        fi
    fi
done

# Выводим размер полученного файла
echo "Размер полученного файла: $(wc -c <"$concat_file") байт"
